" .vimrc
"
let compat_mode = 0
if $COMPATIBILITY
  let compat_mode = 1
end

" vim-plug auto-install and plugin list

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/plugged')

if compat_mode || has('gui')
  Plug 'bling/vim-airline'
endif
Plug 'bling/vim-bufferline'

" Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
Plug 'scrooloose/syntastic'

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-vinegar'

Plug 'altercation/vim-colors-solarized'
Plug 'chriskempson/base16-vim'
Plug 'jeffkreeftmeijer/vim-numbertoggle'
Plug 'kien/ctrlp.vim'
" Plug 'lokaltog/vim-easymotion'
" Plug 'mattn/emmet-vim'
" Plug 'mhinz/vim-startify'
Plug 'morhetz/gruvbox'
" Plug 'skalnik/vim-vroom'
Plug 'vim-ruby/vim-ruby'
" Plug 'airblade/vim-gitgutter'
" Plug 'powerline/powerline', {'rtp': 'powerline/bindings/vim/'}
Plug 'christoomey/vim-tmux-navigator'

call plug#end()

" Simple tweaks
syntax on
syntax enable
filetype plugin indent on
set background=dark
set number
set nocompatible
set autoread
set hidden

" set list
" set listchars=trail:⋅,nbsp:⋅,tab:▸\ ,eol:¬

" my custom mappings
let mapleader = ","
inoremap jk <esc>
"inoremap <esc> <nop>
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" nnoremap <left>  <C-w>h
" nnoremap <down>  <C-w>j
" nnoremap <up>    <C-w>k
" nnoremap <right> <C-w>l

nnoremap <S-right> :bn<CR>
nnoremap <S-left>  :bp<CR>
nnoremap <S-down>  ddp
nnoremap <S-up>    dd2kp

if has('nvim')
  tnoremap <Leader>e <C-\><C-n>
endif

" vim-go
let g:go_fmt_command = "goimports"

let g:bufferline_echo = 0

if compat_mode
  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif

  let g:airline_left_sep = '»'
  let g:airline_right_sep = '«'
  let g:airline_symbols.linenr = '␊'
  let g:airline_symbols.branch = '⎇'
  let g:airline_symbols.paste = '∥'
  let g:airline_symbols.whitespace = 'Ξ'

  " " unicode symbols
  " let g:airline_left_sep = '▶'
  " let g:airline_right_sep = '◀'
  " let g:airline_symbols.linenr = '␤'
  " let g:airline_symbols.linenr = '¶'
  " let g:airline_symbols.paste = 'ρ'
  " let g:airline_symbols.paste = 'Þ'
  " let g:airline_left_sep = "⡇"
  " let g:airline_right_sep = "⡇"
else
  let g:airline_powerline_fonts = 1
endif

if !has('nvim') && !has('gui')
  " powerline
  python from powerline.vim import setup as powerline_setup
  python powerline_setup()
  python del powerline_setup
  autocmd User AirlineAfterInit :AirlineToggle 
endif

" syntastic 'sane defaults'
"
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*

" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0

" Colorscheme etc
colorscheme gruvbox

" tab-settings
set ts=2 sts=2 sw=2 expandtab

" gui specific
if has('gui')
  set guifont=Inconsolata\ For\ Powerline
  colorscheme gruvbox
endif
