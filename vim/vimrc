" .vimrc
"
" vim-plug auto-install and plugin list
"
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/plugged')

Plug 'itchyny/lightline.vim'

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
Plug 'junegunn/fzf.vim'

Plug 'scrooloose/syntastic' ", { 'on': 'SyntasticCheck' }

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-rbenv'
Plug 'tpope/vim-dispatch'

Plug 'airblade/vim-gitgutter'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ludovicchabant/vim-gutentags'
Plug 'altercation/vim-colors-solarized'
Plug 'vim-ruby/vim-ruby'
Plug 'isRuslan/vim-es6'
Plug 'fatih/vim-go'
Plug 'rodjek/vim-puppet'
Plug 'thoughtbot/vim-rspec'

Plug 'rizzatti/dash.vim'
" Plug 'radenling/vim-dispatch-neovim'

call plug#end()

" Simple tweaks

set shell=$SHELL
set background=dark
set number
set nocompatible
set smartcase
set title
set visualbell           " don't beep
set noerrorbells         " don't beep
set hidden
set cursorline
set noshowmode

" tab-settings
set ts=2 sts=2 sw=2 expandtab

" my custom mappings
let mapleader = "\<Space>"
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

nnoremap <left> :bn<cr>
nnoremap <right> :bp<cr>

nnoremap <enter> o<esc>

" paste tweaks, set paste mode etc
map <Leader>p :set paste<CR>o<esc>"*]p:set nopaste<cr>

" to clean up trailing whitespace
nnoremap <leader>W  :%s/\s\+$<cr>

function! NumberToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber
  endif
endfunc

nnoremap <leader>n :call NumberToggle()<cr>
nnoremap <C-p> :Files<cr>

if has('nvim')
  tnoremap <Esc> <C-\><C-n>
  tnoremap <C-h> <C-\><C-n><C-w>h
  tnoremap <C-j> <C-\><C-n><C-w>j
  tnoremap <C-k> <C-\><C-n><C-w>k
  tnoremap <C-l> <C-\><C-n><C-w>l
endif

" Colorscheme etc
colorscheme solarized

" vim-go
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

set clipboard^=unnamed "adds unnamed to existing values

if has("gui")
  set guifont=Sauce\ Code\ Powerline\ Light:h11
endif

let g:syntastic_scss_checkers = ['scss_lint']
" let g:syntastic_ruby_checkers = ['rubocop', 'mri']

let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0



" set statusline=%F%m%r%h%w\ [%l/%L,\ %v]\ [%p%%]\ %=[TYPE=%Y]\ [FMT=%{&ff}]\ %{\"[ENC=\".(&fenc==\"\"?&enc:&fenc).\"]\"}

let g:rspec_command = "Dispatch bin/rspec {spec}"

" RSpec.vim mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>
